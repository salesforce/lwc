env_default: &env_default
  working_directory: ~/lwc
  docker:
    - image: circleci/node:10-browsers

env_perf: &env_perf
  <<: *env_default
  environment:
    - CUSTOM_BASH_ENV: ~/.bashrc
    - CIRCLE_ENV_BROKEN: $CIRCLE_SHA1
    - GIT_APP_CERT_PATH: ~/lwc/git_app.pem



version: 2
jobs:
  build:
    <<: *env_default
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-v5-{{ checksum "yarn.lock" }}

      - run: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-v5-{{ checksum "yarn.lock" }}

      - run:
          name: Sanity checks
          command: |
            node ./scripts/tasks/version-check.js
            node ./scripts/tasks/check-license-headers.js

      - run:
          name: Linting
          command: yarn lint

      - persist_to_workspace:
          root: .
          paths: .


  test_unit:
    <<: *env_default
    steps:
      - attach_workspace:
          at: ~/lwc

      - run:
          name: Run unit tests
          command: yarn test:ci


  test_integration:
    <<: *env_default
    steps:
      - attach_workspace:
          at: ~/lwc

      - run:
          name: Run integration test - Headless Chrome
          command: yarn local:prod
          working_directory: packages/integration-tests


  test_integration_compat:
    <<: *env_default
    steps:
      - attach_workspace:
          at: ~/lwc

      - run:
          name: Install and start sauce connect
          background: true
          command: |
              wget https://saucelabs.com/downloads/sc-4.4.11-linux.tar.gz
              tar -xzf sc-4.4.11-linux.tar.gz
              cd sc-*-linux && ./bin/sc --user $SAUCE_USERNAME --api-key $SAUCE_KEY --readyfile ~/sauce_is_ready

      - run:
          name: Wait for sauce connect to be ready
          command: while [ ! -e ~/sauce_is_ready ]; do sleep 1; done

      - run:
          name: Run integration test - IE11 SauceLabs
          command: yarn sauce:prod_compat --browsers ie11
          working_directory: packages/integration-tests


  perf_and_compare_chrome:
    <<: *env_perf
    steps:
      - attach_workspace:
          at: ~/lwc

      - run:
          name: Setup dynamic environment variables
          command:
              echo '
              export PULL_REQUEST=${CIRCLE_PULL_REQUEST}
              export REPO_NAME=${CIRCLE_PROJECT_REPONAME}
              export TARGET_COMMIT=${CIRCLE_SHA1}
              export BASE_COMMIT=`git rev-parse origin/master`' >> $BASH_ENV

      - run:
          name: Decode PEM as environment variable
          command: echo -e "$GIT_APP_CERT" | base64 -d >> ~/lwc/git_app.pem

      - run:
          name: Preformance Test
          working_directory: packages/perf-benchmarks
          command: yarn start --projects best.headless.config.js --externalStorage=@best/store-aws --runner remote
          no_output_timeout: 40m


      - store_artifacts:
          path: ~/lwc/packages/perf-benchmarks/__benchmark_results__/
          destination: benchmarks

      - run:
          name: Comparing Benchmarks
          working_directory: packages/perf-benchmarks
          command: yarn start --projects best.headless.config.js --compareStats ${BASE_COMMIT} ${TARGET_COMMIT} --externalStorage=@best/store-aws --gitIntegration

  push_canary_npm_artifacts:
    <<: *env_default
    steps:
      - run:
          name: Push artifacts
          command: node scripts/release_canary_npm.js ${CIRCLE_SHA1} packages/@lwc

workflows:
  version: 2
  build_and_test:
    jobs:
      - build

      - test_unit:
          requires:
            - build

      - test_integration:
          requires:
            - build

      - test_integration_compat:
          requires:
            - build

      - perf_and_compare_chrome:
          requires:
            - build

      - push_canary_npm_artifacts:
          requires:
            - build
          filters:
            branches:
              only: master
