# Shared config
ignore_forks: &ignore_forks
  branches:
    # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
    ignore: /pull\/[0-9]+/

only_forks: &only_forks
  branches:
    # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
    only: /pull\/[0-9]+/

deploy_filters: &deploy_filters
  filters:
    branches:
      ignore: /.*/
    tags:
      # Trigger on tags that begin with `v`
      only: /^v.*/

# Jobs definition
version: 2.1


# Custom executors definition
executors:
  node:
    working_directory: ~/lwc
    docker:
      - image: circleci/node:14


# Custom commands definition
commands:
  # Setup
  restore_yarn_cache:
    description: Restore Yarn cache from previous build
    steps:
      - restore_cache:
          keys:
            - yarn-v5-{{ checksum "yarn.lock" }}

  save_yarn_cache:
    description: Save Yarn cache for future builds
    steps:
      - save_cache:
          key: yarn-v5-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  save_workspace:
    description: Save current workspace
    steps:
      - persist_to_workspace:
          root: .
          paths: .

  load_workspace:
    description: Load workspace
    steps:
      - attach_workspace:
          at: ~/lwc


  # Sauce connect
  start_sauce_connect:
    description: Start sauce connect
    parameters:
      username:
        type: env_var_name
        default: SAUCE_USERNAME
      key:
        type: env_var_name
        default: SAUCE_KEY
      tunnel_id:
        type: env_var_name
        default: SAUCE_TUNNEL_ID
    steps:
      - run:
          name: Install and start sauce connect
          background: true
          command: |
              curl https://saucelabs.com/downloads/sc-4.6.2-linux.tar.gz -o saucelabs.tar.gz
              tar -xzf saucelabs.tar.gz
              cd sc-*
              bin/sc -u ${<< parameters.username >>} -k ${<< parameters.key >>} -i ${<< parameters.tunnel_id >>} -P 4445
      - run:
          name: Wait for sauce connect to be up
          command: wget --retry-connrefused --no-check-certificate -T 60 localhost:4445

  stop_sauce_connect:
    description: Stop all sauce connect tunnels
    steps:
      -  run:
          name: Stop sauce connect
          command: killall sc


  # Test
  run_karma:
    description: Run Karma integration tests
    parameters:
      native_shadow:
        type: boolean
      compat:
        type: boolean
      coverage:
        type: boolean
        default: true
    steps:
      - run:
          name: Run karma integration tests
          working_directory: packages/integration-karma
          command: >
              yarn sauce
              <<# parameters.native_shadow >> --native-shadow <</ parameters.native_shadow >>
              <<# parameters.compat >> --compat <</ parameters.compat >>
              <<# parameters.coverage >> --coverage <</ parameters.coverage >>


# Jobs definition
jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_yarn_cache
      - run:
          name: Install dependencies and build
          command: yarn install --frozen-lockfile
      - run:
          name: Check missing file headers 
          command: node ./scripts/tasks/check-license-headers.js
      - run:
          name: Check for version misalignment
          command: node ./scripts/tasks/version-check.js
      - run:
          name: Check formatting
          command: yarn prettier --check '{packages,scripts}/**/*.{js,ts,json,md}'
      - run:
          name: Run linter
          command: yarn lint
      - save_yarn_cache
      - save_workspace


  deploy:
    executor: node
    steps:
      - load_workspace
      - run:
          name: Configure NPM authentication
          command: npm config set "//registry.npmjs.org/:_authToken" "$NPM_AUTOMATION_TOKEN"
      - run:
          name: Publish package
          command: yarn release:publish:ci


  test_unit:
    executor: node
    steps:
      - load_workspace
      - run:
          name: Run unit tests
          command: yarn test:ci


  test_karma:
    executor: node
    environment:
      SAUCE_TUNNEL_ID: lwc_<< pipeline.id	>>_test_karma
    steps:
      - load_workspace
      - start_sauce_connect
      - run_karma:
          native_shadow: false
          compat: false
      - run_karma:
          native_shadow: true
          compat: false
      - run_karma:
          native_shadow: false
          compat: true
      - run:
          name: Compute karma coverage
          command: yarn coverage
          working_directory: packages/integration-karma
      - stop_sauce_connect


  test_integration:
    executor: node
    environment:
      SAUCE_TUNNEL_ID: lwc_<< pipeline.id	>>_test_integration
    steps:
      - load_workspace
      - start_sauce_connect
      - run:
          name: Run integration test - Chrome SauceLabs
          command: yarn sauce:prod --browsers chrome
          working_directory: packages/integration-tests
      - stop_sauce_connect


  test_integration_compat:
    executor: node
    environment:
      SAUCE_TUNNEL_ID: lwc_<< pipeline.id	>>_test_integration_compat
    steps:
      - load_workspace
      - start_sauce_connect
      - run:
          name: Run integration test - IE11 SauceLabs
          command: yarn sauce:prod_compat --browsers ie11
          working_directory: packages/integration-tests
      - stop_sauce_connect


  perf_and_compare:
    executor: node
    environment:
      GIT_APP_CERT_PATH: ~/lwc/git_app.pem
    steps:
      - load_workspace
      - run:
          name: Setup BEST environment
          command: |
              echo 'export PULL_REQUEST=${CIRCLE_PULL_REQUEST}' >> $BASH_ENV
              echo 'export REPO_NAME=${CIRCLE_PROJECT_REPONAME}' >> $BASH_ENV
              echo 'export TARGET_COMMIT=${CIRCLE_SHA1}' >> $BASH_ENV
              echo 'export BASE_COMMIT=`git rev-parse origin/master`' >> $BASH_ENV
              echo -e "$GIT_APP_CERT" | base64 -d >> ~/lwc/git_app.pem
      - run:
          name: Run BEST
          working_directory: packages/perf-benchmarks
          no_output_timeout: 40m
          command: yarn start --externalStorage=@best/store-aws --runner remote --runInBatch --dbAdapter=sql/postgres --dbURI=${BEST_HUB_DATABASE_URL}
      - run:
          name: Comparing Benchmarks
          working_directory: packages/perf-benchmarks
          command: yarn start --compareStats ${BASE_COMMIT} ${TARGET_COMMIT} --externalStorage=@best/store-aws --gitIntegration
      - store_artifacts:
          path: ~/lwc/packages/perf-benchmarks/__benchmark_results__/
          destination: benchmarks


# Workflows definition
workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            <<: *ignore_forks

      - test_unit:
          filters:
            <<: *ignore_forks
          requires:
            - build

      - test_karma:
          filters:
            <<: *ignore_forks
          requires:
            - build

      - perf_and_compare:
          filters:
            <<: *ignore_forks
          requires:
            - build

      - test_integration:
          filters:
            <<: *ignore_forks
          requires:
            - test_unit
            - test_karma

      - test_integration_compat:
          filters:
            <<: *ignore_forks
          requires:
            - test_unit
            - test_karma

  build_and_test_for_forked_repos:
    jobs:
      - build:
          filters:
            <<: *only_forks

      - test_unit:
          filters:
            <<: *only_forks
          requires:
            - build

      - hold:
          type: approval # presents manual approval button in the UI
          filters:
            <<: *only_forks
          requires:
            - build
            - test_unit

      - test_karma:
          context: lwc-sauce-labs
          filters:
            <<: *only_forks
          requires:
            - build
            - hold

      - perf_and_compare:
          context: lwc-sauce-labs
          filters:
            <<: *only_forks
          requires:
            - build
            - hold

      - test_integration:
          context: lwc-sauce-labs
          filters:
            <<: *only_forks
          requires:
            - test_unit
            - test_karma

      - test_integration_compat:
          context: lwc-sauce-labs
          filters:
            <<: *only_forks
          requires:
            - test_unit
            - test_karma

  build_and_test_and_deploy:
    jobs:
      - build:
          <<: *deploy_filters

      - test_unit:
          <<: *deploy_filters
          requires:
            - build

      - test_karma:
          <<: *deploy_filters
          requires:
            - build

      - test_integration:
          <<: *deploy_filters
          requires:
            - test_unit
            - test_karma

      - test_integration_compat:
          <<: *deploy_filters
          requires:
            - test_unit
            - test_karma

      - deploy:
          <<: *deploy_filters
          requires:
            - test_integration
            - test_integration_compat
