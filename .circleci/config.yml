orbs:
  browser-tools: circleci/browser-tools@1.4.6

# Shared config
ignore_forks: &ignore_forks
  branches:
    # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
    ignore: /pull\/[0-9]+/

only_forks: &only_forks
  branches:
    # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
    only: /pull\/[0-9]+/

# Jobs definition
version: 2.1


# Custom executors definition
executors:
  node:
    working_directory: ~/lwc
    docker:
      - image: cimg/node:18.18.0
  node-browsers:
    working_directory: ~/lwc
    docker:
      - image: cimg/node:18.18.0-browsers


# Custom commands definition
commands:
  # Based on https://circleci.com/developer/orbs/orb/kimh/run-with-retry
  retry_command:
    description: Retry command multiple times until it succeeds
    parameters:
      command:
        type: string
      command_name:
        type: string
      working_directory:
        type: string
      retry_count:
        type: integer
        default: 3
      coverage:
        type: boolean
        default: false
      compat:
        type: boolean
        default: false
      disable_synthetic:
        type: boolean
        default: false
      force_native_shadow_mode:
        type: boolean
        default: false
      api_version:
        type: integer
        default: -1 # treated as "latest" in this config
      enable_native_custom_element_lifecycle:
        type: boolean
        default: false
      disable_aria_reflection_polyfill:
        type: boolean
        default: false
      node_env_production:
        type: boolean
        default: false
      disable_synthetic_shadow_support_in_compiler:
        type: boolean
        default: false
    steps:
      - run:
          name: << parameters.command_name >>
          working_directory: << parameters.working_directory >>
          command: |
            retry() {
               MAX_RETRY=<< parameters.retry_count >>
               n=0
               until [ $n -ge $MAX_RETRY ]
               do
                  echo "Try $[$n+1]/$MAX_RETRY..."
                  "$@" && break
                  n=$[$n+1]
               done
               if [ $n -ge $MAX_RETRY ]; then
                 echo "Failed: ${@}" >&2
                 exit 1
               fi
            }
            if [ "<< parameters.api_version >>" -ne "-1" ]; then
              export API_VERSION=<< parameters.api_version >>
            fi
            <<# parameters.disable_synthetic >> DISABLE_SYNTHETIC=1 <</ parameters.disable_synthetic >> \
            <<# parameters.force_native_shadow_mode >> FORCE_NATIVE_SHADOW_MODE_FOR_TEST=1 <</ parameters.force_native_shadow_mode >> \
            <<# parameters.enable_native_custom_element_lifecycle >> ENABLE_NATIVE_CUSTOM_ELEMENT_LIFECYCLE=1 <</ parameters.enable_native_custom_element_lifecycle >> \
            <<# parameters.disable_aria_reflection_polyfill >> DISABLE_ARIA_REFLECTION_POLYFILL=1 <</ parameters.disable_aria_reflection_polyfill >> \
            <<# parameters.node_env_production >> NODE_ENV_FOR_TEST=production <</ parameters.node_env_production >> \
            <<# parameters.disable_synthetic_shadow_support_in_compiler >> DISABLE_SYNTHETIC_SHADOW_SUPPORT_IN_COMPILER=1 <</ parameters.disable_synthetic_shadow_support_in_compiler >> \
            <<# parameters.compat >> COMPAT=1 <</ parameters.compat >> \
            <<# parameters.coverage >> COVERAGE=1 <</ parameters.coverage >> \
            retry << parameters.command >>
  # Setup
  restore_yarn_cache:
    description: Restore Yarn cache from previous build
    steps:
      - restore_cache:
          keys:
            - yarn-v5-{{ checksum "yarn.lock" }}

  save_yarn_cache:
    description: Save Yarn cache for future builds
    steps:
      - save_cache:
          key: yarn-v5-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  restore_nx_cache:
    description: Restore nx cache from previous build
    steps:
      - restore_cache:
          keys:
            - nx-v3-{{ checksum "yarn.lock" }}

  save_nx_cache:
    description: Save nx cache for future builds
    steps:
      - save_cache:
          key: nx-v3-{{ checksum "yarn.lock" }}
          paths:
            - ~/lwc/.nx-cache

  save_workspace:
    description: Save current workspace
    steps:
      - persist_to_workspace:
          root: .
          paths: .

  load_workspace:
    description: Load workspace
    steps:
      - attach_workspace:
          at: ~/lwc


  # Sauce connect
  start_sauce_connect:
    description: Start sauce connect
    parameters:
      username:
        type: env_var_name
        default: SAUCE_USERNAME
      key:
        type: env_var_name
        default: SAUCE_KEY
      tunnel_id:
        type: env_var_name
        default: SAUCE_TUNNEL_ID
    steps:
      - run:
          name: Install and start sauce connect
          background: true
          command: |
              curl https://saucelabs.com/downloads/sc-4.9.1-linux.tar.gz -o saucelabs.tar.gz
              tar -xzf saucelabs.tar.gz
              cd sc-*
              bin/sc -u ${<< parameters.username >>} -k ${<< parameters.key >>} -i ${<< parameters.tunnel_id >>} -P 4445
      - run:
          name: Wait for sauce connect to be up
          command: wget --retry-connrefused --no-check-certificate -T 60 localhost:4445

  # Test
  run_karma:
    description: Run Karma integration tests
    parameters:
      disable_synthetic:
        type: boolean
        default: false
      force_native_shadow_mode:
        type: boolean
        default: false
      api_version:
        type: integer
        default: -1 # treated as "latest" in this config
      enable_native_custom_element_lifecycle:
        type: boolean
        default: false
      disable_aria_reflection_polyfill:
        type: boolean
        default: false
      node_env_production:
        type: boolean
        default: false
      disable_synthetic_shadow_support_in_compiler:
        type: boolean
        default: false
      compat:
        type: boolean
        default: false
      coverage:
        type: boolean
        default: true
    steps:
      - retry_command:
          command_name: Run karma integration tests
          working_directory: packages/@lwc/integration-karma
          disable_synthetic: << parameters.disable_synthetic >>
          force_native_shadow_mode: << parameters.force_native_shadow_mode >>
          enable_native_custom_element_lifecycle: << parameters.enable_native_custom_element_lifecycle >>
          disable_aria_reflection_polyfill: << parameters.disable_aria_reflection_polyfill >>
          node_env_production: << parameters.node_env_production >>
          disable_synthetic_shadow_support_in_compiler: << parameters.disable_synthetic_shadow_support_in_compiler >>
          api_version: << parameters.api_version >>
          compat: << parameters.compat >>
          coverage: << parameters.coverage >>
          command: yarn sauce


# Jobs definition
jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_yarn_cache
      - restore_nx_cache
      - run:
          name: Install dependencies and build
          # Puppeteer Chromium download is only needed for @best/runner-local, which is unused here
          command: PUPPETEER_SKIP_DOWNLOAD=true yarn install --frozen-lockfile
      - run:
          name: Check missing file headers
          command: node ./scripts/tasks/check-license-headers.js
      - run:
          name: Check package.json integrity
          command: node ./scripts/tasks/check-and-rewrite-package-json.js --test
      - run:
          name: Verify @lwc/shared is tree-shakable
          command: node ./scripts/tasks/verify-treeshakable.js ./packages/@lwc/shared/dist/index.js
      - run:
          name: Verify that dependencies are declared
          command: node ./scripts/tasks/check-imports-are-declared-dependencies.js
      - run:
          name: Check formatting
          command: yarn prettier --check '{packages,scripts}/**/*.{js,ts,json,md}'
      - run:
          name: Run linter
          command: yarn lint
      - run:
          name: Check the size of the LWC bundle
          command: yarn bundlesize
      - save_yarn_cache
      - save_nx_cache
      - save_workspace


  test_unit:
    executor: node
    steps:
      - load_workspace
      - run:
          name: Run unit tests
          command: yarn test:ci

  test_benchmark_smoke:
    executor: node-browsers
    steps:
      - run: sudo apt-get update
      - browser-tools/install-chrome: # required for selenium used by tachometer benchmark smoke tests
          chrome-version: 117.0.5938.92
      - load_workspace
      - run:
          name: Run benchmark smoke tests
          command: BENCHMARK_SMOKE_TEST=1 yarn test:performance

  test_karma:
    executor: node
    environment:
      SAUCE_TUNNEL_ID: lwc_<< pipeline.id	>>_test_karma
    steps:
      - load_workspace
      - start_sauce_connect
      - run_karma
      - run_karma:
          disable_synthetic: true
      - run_karma:
          compat: true
      - run_karma:
          force_native_shadow_mode: true
      - run_karma:
          enable_native_custom_element_lifecycle: true
      - run_karma:
          disable_synthetic: true
          enable_native_custom_element_lifecycle: true
      - run_karma:
          api_version: 58
      - run_karma:
          disable_synthetic: true
          api_version: 58
      - run_karma:
          disable_synthetic: true
          disable_aria_reflection_polyfill: true
      - run_karma:
          disable_synthetic: true
          disable_synthetic_shadow_support_in_compiler: true
      - run_karma:
          node_env_production: true
      - run_karma:
          node_env_production: true
          disable_synthetic: true
      - retry_command:
          command_name: Run karma hydration tests
          command: yarn hydration:sauce
          working_directory: packages/@lwc/integration-karma
          coverage: true
      - run:
          name: Compute karma coverage
          command: yarn coverage
          working_directory: packages/@lwc/integration-karma

  test_integration:
    executor: node
    environment:
      SAUCE_TUNNEL_ID: lwc_<< pipeline.id >>_test_integration_prod
    steps:
      - load_workspace
      - start_sauce_connect
      - retry_command:
          command_name: Run integration test - Chrome - prod mode
          command: yarn sauce:prod --browsers chrome
          working_directory: packages/@lwc/integration-tests

  test_integration_dev:
    executor: node
    environment:
      SAUCE_TUNNEL_ID: lwc_<< pipeline.id >>_test_integration_dev
    steps:
      - load_workspace
      - start_sauce_connect
      - retry_command:
          command_name: Run integration test - Chrome - dev mode
          command: yarn sauce:dev --browsers chrome
          working_directory: packages/@lwc/integration-tests


# Workflows definition
workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            <<: *ignore_forks

      - test_unit:
          filters:
            <<: *ignore_forks
          requires:
            - build

      - test_karma:
          filters:
            <<: *ignore_forks
          requires:
            - test_unit

      - test_integration:
          filters:
            <<: *ignore_forks
          requires:
            - test_unit

      - test_integration_dev:
          filters:
            <<: *ignore_forks
          requires:
            - test_unit

      - test_benchmark_smoke:
          filters:
            <<: *ignore_forks
          requires:
            - test_unit

  build_and_test_for_forked_repos:
    jobs:
      - build:
          filters:
            <<: *only_forks

      - test_unit:
          filters:
            <<: *only_forks
          requires:
            - build

      - hold:
          type: approval # presents manual approval button in the UI
          filters:
            <<: *only_forks
          requires:
            - build
            - test_unit

      - test_karma:
          context: lwc-sauce-labs
          filters:
            <<: *only_forks
          requires:
            - build
            - hold

      - test_integration:
          # lwc-sauce-labs context not needed due to using local chrome
          filters:
            <<: *only_forks
          requires:
            - test_unit
            - test_karma

      - test_integration_dev:
          # lwc-sauce-labs context not needed due to using local chrome
          filters:
            <<: *only_forks
          requires:
            - test_unit
            - test_karma
